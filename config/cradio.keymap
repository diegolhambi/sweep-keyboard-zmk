/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define DEFAULT    0
#define SYMBOL     1
#define EXTENDED   2
#define SYMBOL_ALT 3
#define FUNCTION   4
#define SETTINGS   5


/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_settings {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&to SETTINGS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp Q       &kp W      &kp F      &kp P       &kp B        &kp J &kp L       &kp U      &kp Y      &kp SQT
            &hm LCTRL A &hm LALT R &hm LCMD S &hm LSHFT T &kp G        &kp M &hm RSHFT N &hm RCMD E &hm RALT I &hm RCTRL O
            &kp Z       &kp X      &kp C      &kp D       &kp V        &kp K &kp H       &kp COMMA  &kp DOT    &kp FSLH
                                             &kp SPACE &kp BSPC        &lt EXTENDED ENTER &to SYMBOL 
            >;
        };

        symbol {
            bindings = <
            &kp EXCL   &kp AT    &kp HASH &kp COLON &kp SEMICOLON        &kp EQUAL &kp N7 &kp N8 &kp N9 &kp PLUS
            &kp BSLH   &kp PIPE  &kp LPAR &kp LBRC  &kp LBKT             &kp ASTRK &kp N4 &kp N5 &kp N6 &kp MINUS
            &kp DOLLAR &kp UNDER &kp RPAR &kp RBRC  &kp RBKT             &kp N0    &kp N1 &kp N2 &kp N3 &kp FSLH
                                    &to DEFAULT &lt FUNCTION BSPC        &kp ENTER &mo SYMBOL_ALT
            >;
        };

        extended {
            bindings = <
            &kp ESC &kp HOME &kp UP   &kp END   &kp PG_UP        &kp PSCRN &kp LA(LEFT)  &kp LG(F) &kp LA(RIGHT) &kp CAPS
            &kp DEL &kp LEFT &kp DOWN &kp RIGHT &kp PG_DN        &kp LG(S) &kp LSHFT     &kp LCMD  &kp LALT      &kp LCTRL
            &none   &none    &kp TAB  &none     &none            &kp LG(V) &kp LS(LG(K)) &kp LG(C) &kp LG(X)     &kp LG(Z)
                                       &kp SPACE &kp BSPC        &trans &none 
            >;
        };

        symbol_alt {
            bindings = <
            &none &none &none &none &none        &none &kp AMPS   &kp GRAVE   &kp TILDE &none
            &none &none &none &none &none        &none &kp DOLLAR &kp PERCENT &kp CARET &kp COLON
            &none &none &none &none &none        &none &kp EXCL   &kp AT      &kp HASH  &kp COMMA
                              &none &none        &none &trans 
            >;
        };

        function {
            bindings = <
            &none     &none    &none    &none      &none        &kp F12 &kp F7 &kp F8 &kp F9 &none
            &kp LCTRL &kp LALT &kp LCMD &kp LSHIFT &none        &kp F11 &kp F4 &kp F5 &kp F6 &none
            &none     &none    &none    &none      &none        &kp F10 &kp F1 &kp F2 &kp F3 &none
                                            &none &trans        &none &none 
            >;
        };

        settings {
            bindings = <
            &bootloader &none &bt BT_CLR &none &bt BT_SEL 0        &bt BT_SEL 3 &none &none &none &bootloader
            &none       &none &none      &none &bt BT_SEL 1        &bt BT_SEL 4 &none &none &none &none
            &none       &none &none      &none &bt BT_SEL 2        &bt BT_SEL 5 &none &none &none &none
                                          &to DEFAULT &none        &none &none 
            >;
        };
    };
};
